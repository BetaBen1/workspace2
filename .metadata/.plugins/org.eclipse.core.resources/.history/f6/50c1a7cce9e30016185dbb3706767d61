package betaben.realserverhawkanddove;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JToggleButton;
import java.awt.Font;

public class Main extends JFrame {

	private JPanel contentPane;

	JLabel lblLabel;
	JToggleButton tglbtnHawk;
	JToggleButton tglbtnDove;
	JButton btnSend;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Main frame = new Main();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Main() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 750, 750);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		lblLabel = new JLabel("Choose your poison:");
		lblLabel.setFont(new Font("Lucida Blackletter", Font.PLAIN, 48));
		lblLabel.setBounds(6, 6, 738, 74);
		lblLabel.setHorizontalAlignment(JLabel.CENTER);
		contentPane.add(lblLabel);
		
		tglbtnHawk = new JToggleButton("Hawk");
		tglbtnHawk.setFont(new Font("Desdemona", Font.PLAIN, 36));
		tglbtnHawk.setBounds(6, 92, 366, 500);
		contentPane.add(tglbtnHawk);
		
		tglbtnDove = new JToggleButton("Dove");
		tglbtnDove.setFont(new Font("Desdemona", Font.PLAIN, 36));
		tglbtnDove.setBounds(378, 92, 366, 500);
		contentPane.add(tglbtnDove);
		
		btnSend = new JButton("Send");
		btnSend.setFont(new Font("Stencil", Font.PLAIN, 36));
		btnSend.setBounds(175, 604, 400, 118);
		contentPane.add(btnSend);
	}
	
	public void runThread(){
		Thread thread = new Thread(){
			@Override
			public void run(){
				while(true){
					if(tglbtnHawk.isSelected()==true){
						tglbtnDove.setSelected(false);
					}
					if(tglbtnDove.isSelected()==true){
						tglbtnHawk.setSelected(false);
					}
					try {
						sleep(50);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
			}
		};
		thread.start();
	}
}
